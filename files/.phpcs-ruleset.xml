<?xml version="1.0" encoding="UTF-8" ?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="SrgRuleset">
	<description>Steve's PHP Code Sniffer ruleset</description>

	<config name="tab_width" value="4" />

	<!--
		Generic Sniffs
		https://github.com/squizlabs/PHP_CodeSniffer/tree/master/src/Standards/Generic/Sniffs
	-->
	<rule ref="Generic.Arrays.ArrayIndent">
		<properties>
			<property name="indent" value="1" />
		</properties>
	</rule>

	<rule ref="Generic.Classes.DuplicateClassName" />
	<rule ref="Generic.Classes.OpeningBraceSameLine" />

	<rule ref="Generic.CodeAnalysis.AssignmentInCondition" />
	<rule ref="Generic.CodeAnalysis.EmptyPHPStatement" />
	<rule ref="Generic.CodeAnalysis.EmptyStatement" />
	<rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop" />
	<rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall" />
	<rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
	<rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
	<rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier" />
	<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter" />
	<rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />

	<rule ref="Generic.Commenting.DocComment" />
	<rule ref="Generic.Commenting.Fixme" />
	<rule ref="Generic.Commenting.Todo" />

	<rule ref="Generic.ControlStructures.InlineControlStructure" />

	<rule ref="Generic.Files.ByteOrderMark" />
	<rule ref="Generic.Files.EndFileNewline" />
	<rule ref="Generic.Files.ExecutableFile" />
	<rule ref="Generic.Files.InlineHTML" />
	<rule ref="Generic.Files.LineEndings" />
	<rule ref="Generic.Files.LineLength">
		<properties>
			<property name="absoluteLineLimit" value="160" />
			<property name="ignoreComments" value="true" />
			<property name="lineLimit" value="120" />
		</properties>
	</rule>
	<rule ref="Generic.Files.LowercasedFilename" />
	<rule ref="Generic.Files.OneClassPerFile" />
	<rule ref="Generic.Files.OneInterfacePerFile" />
	<rule ref="Generic.Files.OneObjectStructurePerFile" />
	<rule ref="Generic.Files.OneTraitPerFile" />

	<rule ref="Generic.Formatting.DisallowMultipleStatements" />
	<rule ref="Generic.Formatting.MultipleStatementAlignment" />
	<rule ref="Generic.Formatting.NoSpaceAfterCast" />
	<rule ref="Generic.Formatting.SpaceAfterNot" />
	<rule ref="Generic.Formatting.SpaceBeforeCast" />

	<rule ref="Generic.Functions.CallTimePassByReference" />
	<rule ref="Generic.Functions.FunctionCallArgumentSpacing" />
	<rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie" />

	<rule ref="Generic.Metrics.CyclomaticComplexity" />
	<rule ref="Generic.Metrics.NestingLevel" />

	<rule ref="Generic.NamingConventions.CamelCapsFunctionName" />
	<rule ref="Generic.NamingConventions.ConstructorName" />
	<rule ref="Generic.NamingConventions.UpperCaseConstantName" />

	<rule ref="Generic.PHP.BacktickOperator" />
	<rule ref="Generic.PHP.CharacterBeforePHPOpeningTag" />
	<rule ref="Generic.PHP.DeprecatedFunctions" />
	<rule ref="Generic.PHP.DisallowAlternativePHPTags" />
	<rule ref="Generic.PHP.DisallowRequestSuperglobal" />
	<rule ref="Generic.PHP.DisallowShortOpenTag" />
	<rule ref="Generic.PHP.DiscourageGoto" />
	<rule ref="Generic.PHP.ForbiddenFunctions" />
	<rule ref="Generic.PHP.LowerCaseKeyword" />
	<rule ref="Generic.PHP.LowerCaseType" />
	<rule ref="Generic.PHP.NoSilencedErrors" />
	<rule ref="Generic.PHP.RequireStrictTypes" />
	<rule ref="Generic.PHP.SAPIUsage" />
	<rule ref="Generic.PHP.Syntax" />
	<rule ref="Generic.PHP.UpperCaseConstant" />

	<rule ref="Generic.Strings.UnnecessaryStringConcat">
		<properties>
			<property name="allowMultiline" value="true" />
		</properties>
	</rule>

	<rule ref="Generic.VersionControl.GitMergeConflict" />

	<rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing" />
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent" />
	<rule ref="Generic.WhiteSpace.IncrementDecrementSpacing" />
	<rule ref="Generic.WhiteSpace.LanguageConstructSpacing" />
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="exact" value="true" />
			<property name="indent" value="1" />
			<property name="tabIndent" value="true" />
		</properties>
	</rule>
	<rule ref="Generic.WhiteSpace.SpreadOperatorSpacingAfter" />

	<!--
		MySource Sniffs
		https://github.com/squizlabs/PHP_CodeSniffer/tree/master/src/Standards/MySource/Sniffs
	-->
	<rule ref="MySource.Channels.DisallowSelfActions" />
	<rule ref="MySource.Channels.IncludeOwnSystem" />
	<rule ref="MySource.Channels.IncludeSystem" />
	<rule ref="MySource.Channels.UnusedSystem" />

	<rule ref="MySource.Commenting.FunctionComment">
		<type>warning</type>
	</rule>

	<rule ref="MySource.Debug.DebugCode" />
	<rule ref="MySource.Debug.FirebugConsole" />

	<rule ref="MySource.Objects.AssignThis" />
	<rule ref="MySource.Objects.CreateWidgetTypeCallback" />
	<rule ref="MySource.Objects.DisallowNewWidget" />

	<rule ref="MySource.PHP.AjaxNullComparison" />
	<rule ref="MySource.PHP.EvalObjectFactory" />
	<rule ref="MySource.PHP.GetRequestData" />
	<rule ref="MySource.PHP.ReturnFunctionValue" />

	<rule ref="MySource.Strings.JoinStrings" />

	<!--
		PEAR Sniffs
		https://github.com/squizlabs/PHP_CodeSniffer/tree/master/src/Standards/PEAR/Sniffs
	-->
	<rule ref="PEAR.Classes.ClassDeclaration">
		<exclude name="PEAR.Classes.ClassDeclaration.OpenBraceNewLine" />
	</rule>

	<rule ref="PEAR.Commenting.ClassComment">
		<type>warning</type>
	</rule>
	<rule ref="PEAR.Commenting.FileComment">
		<type>warning</type>
		<exclude name="PEAR.Commenting.FileComment.MissingCategoryTag" />
		<exclude name="PEAR.Commenting.FileComment.MissingLicenseTag" />
		<exclude name="PEAR.Commenting.FileComment.MissingLinkTag" />
		<exclude name="PEAR.Commenting.FileComment.MissingPackageTag" />
		<exclude name="PEAR.Commenting.FileComment.MissingVersion" />
	</rule>
	<rule ref="PEAR.Commenting.FunctionComment">
		<type>warning</type>
	</rule>
	<rule ref="PEAR.Commenting.InlineComment" />

	<rule ref="PEAR.ControlStructures.ControlSignature" />
	<rule ref="PEAR.ControlStructures.MultiLineCondition" />

	<rule ref="PEAR.Files.IncludingFile" />

	<rule ref="PEAR.Formatting.MultiLineAssignment" />

	<!--<rule ref="PEAR.Functions.FunctionCallSignature" />
	<rule ref="PEAR.Functions.FunctionDeclaration" />-->
	<rule ref="PEAR.Functions.ValidDefaultValue" />

	<rule ref="PEAR.NamingConventions.ValidClassName" />
	<rule ref="PEAR.NamingConventions.ValidFunctionName" />
	<rule ref="PEAR.NamingConventions.ValidVariableName" />

	<!--<rule ref="PEAR.WhiteSpace.ObjectOperatorIndent" />
	<rule ref="PEAR.WhiteSpace.ScopeClosingBrace" />
	<rule ref="PEAR.WhiteSpace.ScopeIndent" />-->

	<!--
		PSR1 Sniffs
		https://github.com/squizlabs/PHP_CodeSniffer/tree/master/src/Standards/PSR1/Sniffs
	-->
	<rule ref="PSR1.Classes.ClassDeclaration" />

	<rule ref="PSR1.Files.SideEffects" />

	<rule ref="PSR1.Methods.CamelCapsMethodName" />

	<!--
		PSR12 Sniffs
		https://github.com/squizlabs/PHP_CodeSniffer/tree/master/src/Standards/PSR12/Sniffs
	-->
	<rule ref="PSR12.Classes.AnonClassDeclaration" />
	<rule ref="PSR12.Classes.ClassInstantiation" />
	<rule ref="PSR12.Classes.ClosingBrace" />

	<rule ref="PSR12.ControlStructures.BooleanOperatorPlacement" />
	<rule ref="PSR12.ControlStructures.ControlStructureSpacing" />

	<rule ref="PSR12.Files.DeclareStatement" />
	<!--<rule ref="PSR12.Files.FileHeader" />-->
	<rule ref="PSR12.Files.ImportStatement" />
	<rule ref="PSR12.Files.OpenTag" />

	<rule ref="PSR12.Functions.NullableTypeDeclaration" />
	<rule ref="PSR12.Functions.ReturnTypeDeclaration" />

	<rule ref="PSR12.Keywords.ShortFormTypeKeywords" />

	<rule ref="PSR12.Namespaces.CompoundNamespaceDepth" />

	<rule ref="PSR12.Operators.OperatorSpacing" />

	<rule ref="PSR12.Properties.ConstantVisibility" />

	<rule ref="PSR12.Traits.UseDeclaration" />

	<!--
		PSR2 Sniffs
		https://github.com/squizlabs/PHP_CodeSniffer/tree/master/src/Standards/PSR2/Sniffs
	-->
	<!--<rule ref="PSR2.Classes.ClassDeclaration" />-->
	<rule ref="PSR2.Classes.PropertyDeclaration">
		<exclude name="PSR2.Classes.PropertyDeclaration.Underscore" />
	</rule>

	<rule ref="PSR2.ControlStructures.ControlStructureSpacing" />
	<rule ref="PSR2.ControlStructures.ElseIfDeclaration" />
	<rule ref="PSR2.ControlStructures.SwitchDeclaration" />

	<rule ref="PSR2.Files.ClosingTag" />
	<rule ref="PSR2.Files.EndFileNewline" />

	<!--<rule ref="PSR2.Methods.FunctionCallSignature" />-->
	<rule ref="PSR2.Methods.FunctionClosingBrace" />
	<!--<rule ref="PSR2.Methods.MethodDeclaration" />-->

	<rule ref="PSR2.Namespaces.NamespaceDeclaration" />
	<rule ref="PSR2.Namespaces.UseDeclaration" />

	<!--
		Squiz Sniffs
		https://github.com/squizlabs/PHP_CodeSniffer/tree/master/src/Standards/Squiz/Sniffs
	-->
	<rule ref="Squiz.Arrays.ArrayBracketSpacing" />
	<!--<rule ref="Squiz.Arrays.ArrayDeclaration" />-->

	<rule ref="Squiz.Classes.ClassDeclaration">
		<exclude name="Squiz.Classes.ClassDeclaration.OpenBraceNewLine" />
	</rule>
	<rule ref="Squiz.Classes.ClassFileName">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Classes.DuplicateProperty" />
	<rule ref="Squiz.Classes.LowercaseClassKeywords" />
	<rule ref="Squiz.Classes.SelfMemberReference" />
	<rule ref="Squiz.Classes.ValidClassName" />

	<rule ref="Squiz.Commenting.BlockComment" />
	<rule ref="Squiz.Commenting.ClassComment">
		<type>warning</type>
	</rule>
	<!--<rule ref="Squiz.Commenting.ClosingDeclarationComment" />-->
	<rule ref="Squiz.Commenting.DocCommentAlignment" />
	<rule ref="Squiz.Commenting.EmptyCatchComment" />
	<rule ref="Squiz.Commenting.FileComment">
		<exclude name="Squiz.Commenting.FileComment.MissingPackageTag" />
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.FunctionCommentThrowTag">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.InlineComment" />
	<rule ref="Squiz.Commenting.LongConditionClosingComment" />
	<!--<rule ref="Squiz.Commenting.PostStatementComment" />-->
	<rule ref="Squiz.Commenting.VariableComment">
		<type>warning</type>
	</rule>

	<rule ref="Squiz.ControlStructures.ControlSignature" />
	<!--<rule ref="Squiz.ControlStructures.ElseIfDeclaration" />-->
	<rule ref="Squiz.ControlStructures.ForEachLoopDeclaration" />
	<rule ref="Squiz.ControlStructures.ForLoopDeclaration" />
	<rule ref="Squiz.ControlStructures.InlineIfDeclaration" />
	<rule ref="Squiz.ControlStructures.LowercaseDeclaration" />
	<rule ref="Squiz.ControlStructures.SwitchDeclaration" />

	<rule ref="Squiz.Files.FileExtension" />

	<rule ref="Squiz.Formatting.OperatorBracket" />

	<rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing" />
	<rule ref="Squiz.Functions.FunctionDeclaration" />
	<rule ref="Squiz.Functions.FunctionDuplicateArgument" />
	<rule ref="Squiz.Functions.GlobalFunction" />
	<rule ref="Squiz.Functions.LowercaseFunctionKeywords" />
	<!--<rule ref="Squiz.Functions.MultiLineFunctionDeclaration" />-->

	<rule ref="Squiz.NamingConventions.ValidFunctionName" />
	<rule ref="Squiz.NamingConventions.ValidVariableName" />

	<rule ref="Squiz.Objects.DisallowObjectStringIndex" />
	<rule ref="Squiz.Objects.ObjectInstantiation" />
	<rule ref="Squiz.Objects.ObjectMemberComma" />

	<rule ref="Squiz.Operators.ComparisonOperatorUsage" />
	<rule ref="Squiz.Operators.IncrementDecrementUsage" />
	<rule ref="Squiz.Operators.ValidLogicalOperators" />

	<rule ref="Squiz.PHP.CommentedOutCode" />
	<rule ref="Squiz.PHP.DisallowBooleanStatement" />
	<rule ref="Squiz.PHP.DisallowComparisonAssignment" />
	<rule ref="Squiz.PHP.DisallowInlineIf" />
	<rule ref="Squiz.PHP.DisallowMultipleAssignments" />
	<rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops" />
	<rule ref="Squiz.PHP.DiscouragedFunctions" />
	<rule ref="Squiz.PHP.EmbeddedPhp" />
	<rule ref="Squiz.PHP.Eval" />
	<rule ref="Squiz.PHP.GlobalKeyword" />
	<rule ref="Squiz.PHP.Heredoc" />
	<rule ref="Squiz.PHP.InnerFunctions" />
	<rule ref="Squiz.PHP.LowercasePHPFunctions" />
	<rule ref="Squiz.PHP.NonExecutableCode" />

	<rule ref="Squiz.Scope.MemberVarScope" />
	<rule ref="Squiz.Scope.MethodScope" />
	<rule ref="Squiz.Scope.StaticThisUsage" />

	<!--<rule ref="Squiz.Strings.ConcatenationSpacing" />
	<rule ref="Squiz.Strings.DoubleQuoteUsage" />-->
	<rule ref="Squiz.Strings.EchoedStrings" />

	<rule ref="Squiz.WhiteSpace.CastSpacing" />
	<rule ref="Squiz.WhiteSpace.ControlStructureSpacing" />
	<!--<rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace" />-->
	<rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace" />
	<rule ref="Squiz.WhiteSpace.FunctionSpacing" />
	<rule ref="Squiz.WhiteSpace.LanguageConstructSpacing" />
	<rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing" />
	<rule ref="Squiz.WhiteSpace.MemberVarSpacing">
		<properties>
			<property name="spacing" value="0" />
		</properties>
	</rule>
	<rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing" />
	<rule ref="Squiz.WhiteSpace.OperatorSpacing" />
	<rule ref="Squiz.WhiteSpace.PropertyLabelSpacing" />
	<rule ref="Squiz.WhiteSpace.ScopeClosingBrace" />
	<rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing" />
	<rule ref="Squiz.WhiteSpace.SemicolonSpacing" />
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace" />

	<!--
		Zend Sniffs
		https://github.com/squizlabs/PHP_CodeSniffer/tree/master/src/Standards/Zend/Sniffs
	-->
	<rule ref="Zend.Files.ClosingTag" />

	<rule ref="Zend.NamingConventions.ValidVariableName" />

</ruleset>
